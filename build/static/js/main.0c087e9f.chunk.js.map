{"version":3,"sources":["logo.png","components/header.js","components/banner.js","components/experiences.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","AppBar","position","elevation","color","Toolbar","Grid","justify","container","spacing","item","src","Logo","height","alt","IconButton","size","aria-label","component","Banner","props","Paper","className","params","particlesjs_config","Typography","variant","useStyles","makeStyles","theme","paper","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","button","margin","modal","display","alignItems","justifyContent","root","marginTop","marginBottom","flexGrow","textAlign","avatar","width","large","marginLeft","marginRight","icons","uploadButton","leadText","Experiences","classes","React","useState","data","setData","loading","setLoading","open","setOpen","selectedFile","setSelectedFile","story","setStory","name","setName","useEffect","a","axios","result","fetchData","Container","maxWidth","disableGutters","Button","onClick","startIcon","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","style","noValidate","autoComplete","direction","FormControl","TextField","id","label","required","value","onChange","e","target","multiline","rows","accept","input","type","event","files","htmlFor","formData","FormData","append","console","warn","post","then","res","List","map","Experience","like","setLike","handleLike","url","log","handleShare","preventDefault","encoded","encodeURI","window","location","href","ListItem","key","Avatar","image_uri","xs","likes","shares","HomePage","Fragment","createMuiTheme","palette","background","default","primary","main","secondary","text","hint","status","danger","orange","typography","h1","fontSize","breakpoints","up","h3","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c087e9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e693df1.png\";","import React from 'react';\r\n\r\nimport './header.css';\r\nimport Logo from '../logo.png';\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <AppBar position=\"static\" elevation={1} color=''>\r\n            <Toolbar>\r\n                <Grid\r\n                    justify=\"space-between\" \r\n                    container\r\n                    spacing={24}\r\n                >\r\n                    <Grid item>\r\n                        <img src={Logo} height={40} alt='covid-experience-logo' />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton size={12} color=\"primary\" aria-label=\"Share your experience\" component=\"span\">\r\n                            <ShareOutlinedIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport './header.css';\r\nimport { Typography, Paper } from '@material-ui/core';\r\n\r\nimport './banner.css';\r\n\r\nimport Particles from 'react-particles-js';\r\nimport particlesjs_config from './particlesjs-config.json';\r\n\r\nexport const Banner = (props) => {\r\n    return (\r\n        <Paper>\r\n            <div className=\"wrapper\">\r\n                <Particles\r\n                    params={particlesjs_config}\r\n                    // width=\"100vw\"\r\n                    height=\"80vh\"\r\n                />\r\n                <div className=\"text\">\r\n                    <Typography variant=\"h1\" className=\"lead-text\">Stay Home. Stay safe</Typography>\r\n                    <Typography variant=\"subtitle2\" className=\"text-light-grey\">Share your experience with the world.</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Box, Grid, List, Paper, ListItem, Typography, Modal, Button, FormControl, TextField } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PostAddOutlinedIcon from '@material-ui/icons/PostAddOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport './experiences.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: '#ffffff',\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\",\r\n        paddingLeft: \"20px\",\r\n        paddingRight: \"20px\"\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    root: {\r\n        marginTop: 40,\r\n        marginBottom: 40,\r\n        flexGrow: 1,\r\n        textAlign: 'center'\r\n    },\r\n    avatar: {\r\n        width: \"90px\"\r\n    },\r\n    large: {\r\n        width: \"70px\",\r\n        height: \"70px\",\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    icons: {\r\n        '& > *': {\r\n            marginRight: \"20px\",\r\n        }\r\n    },\r\n    uploadButton: {\r\n        backgroundColor: '#4F7CAC',\r\n        color: '#ffffff'\r\n    },\r\n    leadText: {\r\n        color: \"#101935\",\r\n    }\r\n}));\r\n\r\n\r\nexport function Experiences() {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedFile, setSelectedFile] = React.useState('');\r\n    const [story, setStory] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(`/api/posts`);\r\n\r\n            setData(result.data);\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n            \r\n\r\n    function handleInputChange(event) {\r\n        setSelectedFile(event.target.files[0]);\r\n    }\r\n\r\n\r\n    function submit() {\r\n        const formData = new FormData()\r\n        formData.append('image', selectedFile);\r\n        formData.append('name', name);\r\n        formData.append('story', story);\r\n        console.warn(selectedFile);\r\n        \r\n        let url = \"thecovidxperience.herokuapp.com/api/posts\";\r\n\r\n        axios.post(url, formData, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.warn(res);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"md\" className={classes.root} disableGutters={true}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={handleOpen}\r\n                startIcon={<PostAddOutlinedIcon />}\r\n            >\r\n                Add your Experience\r\n            </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Container maxWidth=\"sm\" className={classes.paper}>\r\n                        <Typography variant=\"h1\" className={classes.leadText} style={{ margin: 10 }}>Share your experience</Typography>\r\n                        <form noValidate autoComplete=\"off\">\r\n                            <Grid item>\r\n                                <Grid container direction=\"column\">\r\n\r\n                                    <FormControl className=\"form-items\">\r\n                                        <TextField\r\n                                            id=\"story\"\r\n                                            label=\"Name\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            value={name}\r\n                                            style={{ margin: 10 }}\r\n                                            onChange={(e) => { setName(e.target.value)}}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormControl>\r\n                                        <TextField\r\n                                            id=\"story\"\r\n                                            label=\"Your story\"\r\n                                            multiline\r\n                                            rows={2}\r\n                                            variant=\"outlined\"\r\n                                            style={{ margin: 10 }}\r\n                                            required={true}\r\n                                            value={story}\r\n                                            onChange={(e)=>{setStory(e.target.value)}}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormControl>\r\n                                        <div\r\n                                            style={{ margin: 10 }}\r\n                                        >\r\n\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                className={classes.input}\r\n                                                style={{ display: 'none' }}\r\n                                                id=\"raised-button-file\"\r\n                                                type=\"file\"\r\n                                                onChange={handleInputChange}\r\n                                            />\r\n                                            <label htmlFor=\"raised-button-file\">\r\n                                                <Button variant=\"raised\" className={classes.uploadButton} component=\"span\">\r\n                                                    <ImageOutlinedIcon />\r\n                                                &nbsp; Upload\r\n  </Button>\r\n                                            </label>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <Button variant=\"raised\" className={classes.uploadButton} \r\n                                    onClick={submit}>\r\n                                        Submit &nbsp;\r\n                                        <SendIcon />\r\n  </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Container>\r\n                </Fade>\r\n            </Modal>\r\n            <Paper>\r\n                <Typography variant=\"h1\" style={{ marginTop: 50 }} className={classes.leadText}>Experiences so far...</Typography>\r\n                <List>\r\n                    {loading === true ? (<p>Loading</p>)\r\n                        : (data.map(item => <Experience data={item} />))}\r\n                </List>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction Experience(props) {\r\n    const classes = useStyles();\r\n    const [like, setLike] = React.useState(false);\r\n    const data = props.data;\r\n\r\n    const handleLike = async () => {\r\n        const url = `thecovidxperience.herokuapp.com/api/posts/${data.id}/like`;\r\n        await axios.post(url, { id: data.id })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setLike(!like);\r\n            });\r\n\r\n        // not really useful for anything\r\n    }\r\n\r\n    const handleShare = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post(`thecovidxperience.herokuapp.com/api/posts/${data.id}/like`, {})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setLike(!like);\r\n            });\r\n        const encoded = encodeURI(\"A platform to share your covid-19 experience with the world in order to encourage every one that we're together in this. Stay strong!\");\r\n\r\n        window.location.href =\"https://wa.me/+2349061279158?text=\" + encoded;\r\n        \r\n    }\r\n\r\n    return (\r\n        <ListItem key={props.id} button>\r\n            <Grid container spacing={1} style={{\r\n                paddingTop: 15,\r\n                paddingBottom: 15,\r\n            }}>\r\n                <Grid item className={classes.avatar}>\r\n                    <Avatar alt=\"Profile image\" src={'/uploads/' + data.image_uri} className={classes.large} />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction='column'>\r\n                        <Grid item>\r\n                            <span><b>{data.name}</b></span>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {data.story}\r\n                        </Grid>\r\n                        <Grid item style={{\r\n                            paddingTop: 15\r\n                        }}>\r\n                            <Grid container justify=\"flex-end\" className={classes.icons}>\r\n\r\n                                <Typography component=\"button\" variant=\"body2\" style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center'\r\n                                }}\r\n                                    onClick={handleLike}\r\n                                >\r\n                                    {data.likes} &nbsp; {like ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n                                </Typography>\r\n                                <Typography component=\"button\" variant=\"body2\" style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center'\r\n                                }}\r\n                                    onClick={handleShare}\r\n                                >\r\n                                    {data.shares} &nbsp; <ShareOutlinedIcon />\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Header } from '../components/header';\r\nimport { Banner } from '../components/banner';\r\nimport { Experiences } from \"../components/experiences\";\r\n\r\nexport default function HomePage() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Banner />\r\n            <Experiences />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport { orange } from '@material-ui/core/colors';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  CssBaseline\n} from '@material-ui/core';\n\nimport HomePage from './pages/home';\n\nconst theme = createMuiTheme({\n  palette: {\n    background:{\n      default: '#ffffff',\n    },\n    primary: {\n      main: '#101935'\n    }, \n    secondary: {\n      main: '#4F7CAC',\n    },\n    text: {\n      secondary: \"#000000\",\n      hint: \"#eeeeee\"\n    }\n  },\n  status: {\n    danger: orange[500],\n  },\n});\n\ntheme.typography.h1 = {\n  fontSize: '1.8rem',\n  '@media (min-width:600px)': {\n    fontSize: '2.4rem',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '3rem',\n  },\n};\n\ntheme.typography.h3 = {\n  fontSize: '1.2rem',\n  '@media (min-width:600px)': {\n    fontSize: '2rem',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '2.4rem',\n  },\n};\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <HomePage />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}